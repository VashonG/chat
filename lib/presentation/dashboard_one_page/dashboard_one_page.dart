import '../dashboard_one_page/widgets/usersubscriptio_item_widget.dart';import 'bloc/dashboard_one_bloc.dart';import 'models/dashboard_one_model.dart';import 'models/usersubscriptio_item_model.dart';import 'package:carat_card/core/app_export.dart';import 'package:carat_card/widgets/app_bar/appbar_circleimage.dart';import 'package:carat_card/widgets/app_bar/appbar_image.dart';import 'package:carat_card/widgets/app_bar/appbar_subtitle.dart';import 'package:carat_card/widgets/app_bar/custom_app_bar.dart';import 'package:carat_card/widgets/custom_outlined_button.dart';import 'package:flutter/material.dart';class DashboardOnePage extends StatelessWidget {const DashboardOnePage({Key? key}) : super(key: key);

static Widget builder(BuildContext context) { return BlocProvider<DashboardOneBloc>(create: (context) => DashboardOneBloc(DashboardOneState(dashboardOneModelObj: DashboardOneModel()))..add(DashboardOneInitialEvent()), child: DashboardOnePage()); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(appBar: CustomAppBar(height: 38.v, leadingWidth: 58.h, leading: AppbarCircleimage(imagePath: ImageConstant.imgEllipse2, margin: EdgeInsets.only(left: 20.h), onTap: () {onTapCircleimage(context);}), title: AppbarSubtitle(text: "lbl_home".tr, margin: EdgeInsets.only(left: 12.h)), actions: [AppbarImage(svgPath: ImageConstant.imgHeroiconsoutlinebell, margin: EdgeInsets.symmetric(horizontal: 20.h, vertical: 7.v), onTap: () {onTapHeroiconsoutlin(context);})]), body: SizedBox(width: mediaQueryData.size.width, child: SingleChildScrollView(child: Column(children: [Container(height: 15.v, width: double.maxFinite, decoration: BoxDecoration(color: appTheme.whiteA700)), Container(margin: EdgeInsets.only(left: 20.h, top: 69.v, right: 20.h), padding: EdgeInsets.symmetric(horizontal: 20.h, vertical: 19.v), decoration: AppDecoration.outlineGray.copyWith(borderRadius: BorderRadiusStyle.roundedBorder20), child: Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.center, children: [RichText(text: TextSpan(children: [TextSpan(text: "lbl_1_933".tr, style: CustomTextStyles.headlineLargeSemiBold_1), TextSpan(text: "lbl_40".tr, style: CustomTextStyles.headlineLargeBluegray200)]), textAlign: TextAlign.left), SizedBox(height: 7.v), Text("lbl_total_balance".tr, style: theme.textTheme.titleSmall), Padding(padding: EdgeInsets.only(top: 25.v, right: 16.h), child: Row(children: [CustomOutlinedButton(width: 78.h, text: "lbl_top_up".tr, onTap: () {onTapTopup(context);}), CustomOutlinedButton(width: 114.h, text: "lbl_freeze_card".tr, margin: EdgeInsets.only(left: 12.h), onTap: () {onTapFreezecard(context);}), CustomOutlinedButton(width: 78.h, text: "lbl_details".tr, margin: EdgeInsets.only(left: 12.h), onTap: () {onTapDetails(context);})])), SizedBox(height: 24.v), BlocSelector<DashboardOneBloc, DashboardOneState, DashboardOneModel?>(selector: (state) => state.dashboardOneModelObj, builder: (context, dashboardOneModelObj) {return ListView.separated(physics: NeverScrollableScrollPhysics(), shrinkWrap: true, separatorBuilder: (context, index) {return SizedBox(height: 19.v);}, itemCount: dashboardOneModelObj?.usersubscriptioItemList.length ?? 0, itemBuilder: (context, index) {UsersubscriptioItemModel model = dashboardOneModelObj?.usersubscriptioItemList[index] ?? UsersubscriptioItemModel(); return UsersubscriptioItemWidget(model);});})])), Container(margin: EdgeInsets.only(left: 20.h, top: 20.v, right: 20.h), padding: EdgeInsets.all(20.h), decoration: AppDecoration.outlineGray.copyWith(borderRadius: BorderRadiusStyle.roundedBorder20), child: Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.center, children: [Text("lbl_stock_rewards".tr, style: theme.textTheme.titleSmall), SizedBox(height: 25.v), GestureDetector(onTap: () {onTapRowtesla(context);}, child: Row(children: [SizedBox(height: 54.adaptSize, width: 54.adaptSize, child: CircularProgressIndicator(value: 0.5, backgroundColor: appTheme.orange5002, color: theme.colorScheme.primary)), Padding(padding: EdgeInsets.only(left: 16.h, top: 8.v, bottom: 8.v), child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Text("lbl_tesla".tr, style: theme.textTheme.titleSmall), SizedBox(height: 5.v), Text("lbl_tsla".tr, style: CustomTextStyles.bodySmallOnError)])), Spacer(), SizedBox(height: 54.adaptSize, width: 54.adaptSize, child: Stack(alignment: Alignment.center, children: [Align(alignment: Alignment.center, child: SizedBox(height: 54.adaptSize, width: 54.adaptSize, child: CircularProgressIndicator(value: 0.5, backgroundColor: appTheme.orange5002, color: theme.colorScheme.primary))), Align(alignment: Alignment.center, child: Container(height: 36.adaptSize, width: 36.adaptSize, decoration: BoxDecoration(borderRadius: BorderRadius.circular(18.h), image: DecorationImage(image: AssetImage(ImageConstant.imgEllipse1436x36), fit: BoxFit.cover))))])), Padding(padding: EdgeInsets.only(left: 16.h, top: 8.v, bottom: 8.v), child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Text("lbl_atlassian".tr, style: theme.textTheme.titleSmall), SizedBox(height: 5.v), Text("lbl_atls".tr, style: CustomTextStyles.bodySmallOnError)]))]))])), Container(margin: EdgeInsets.only(left: 20.h, top: 20.v, right: 20.h), padding: EdgeInsets.all(20.h), decoration: AppDecoration.outlineGray.copyWith(borderRadius: BorderRadiusStyle.roundedBorder20), child: Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.center, children: [Text("lbl_featured_offers".tr, style: theme.textTheme.titleSmall), Padding(padding: EdgeInsets.only(top: 25.v, right: 3.h), child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [Expanded(child: Padding(padding: EdgeInsets.only(right: 8.h), child: Column(children: [CustomImageView(imagePath: ImageConstant.imgEllipse6, height: 54.adaptSize, width: 54.adaptSize, radius: BorderRadius.circular(27.h)), SizedBox(height: 12.v), Container(padding: EdgeInsets.symmetric(vertical: 2.v), decoration: AppDecoration.white.copyWith(borderRadius: BorderRadiusStyle.circleBorder11), child: Text("lbl_5_stock_back".tr, style: theme.textTheme.labelLarge))]))), Expanded(child: Padding(padding: EdgeInsets.symmetric(horizontal: 8.h), child: Column(children: [CustomImageView(imagePath: ImageConstant.imgEllipse7, height: 54.adaptSize, width: 54.adaptSize, radius: BorderRadius.circular(27.h)), SizedBox(height: 12.v), Container(padding: EdgeInsets.symmetric(vertical: 2.v), decoration: AppDecoration.white.copyWith(borderRadius: BorderRadiusStyle.circleBorder11), child: Text("lbl_5_stock_back".tr, style: theme.textTheme.labelLarge))]))), Expanded(child: Padding(padding: EdgeInsets.only(left: 8.h), child: Column(children: [CustomImageView(imagePath: ImageConstant.imgEllipse9, height: 54.adaptSize, width: 54.adaptSize, radius: BorderRadius.circular(27.h)), SizedBox(height: 12.v), Container(padding: EdgeInsets.symmetric(vertical: 2.v), decoration: AppDecoration.white.copyWith(borderRadius: BorderRadiusStyle.circleBorder11), child: Text("lbl_5_stock_back".tr, style: theme.textTheme.labelLarge))])))]))]))]))))); } 
/// Navigates to the porfileOneScreen when the action is triggered.
///
/// The [BuildContext] parameter is used to build the navigation stack.
/// When the action is triggered, this function uses the [NavigatorService]
/// to push the named route for the porfileOneScreen.
onTapCircleimage(BuildContext context) { NavigatorService.pushNamed(AppRoutes.porfileOneScreen, ); } 
/// Navigates to the notificationsTwoScreen when the action is triggered.
///
/// The [BuildContext] parameter is used to build the navigation stack.
/// When the action is triggered, this function uses the [NavigatorService]
/// to push the named route for the notificationsTwoScreen.
onTapHeroiconsoutlin(BuildContext context) { NavigatorService.pushNamed(AppRoutes.notificationsTwoScreen, ); } 
/// Navigates to the transactionsFiveScreen when the action is triggered.
///
/// The [BuildContext] parameter is used to build the navigation stack.
/// When the action is triggered, this function uses the [NavigatorService]
/// to push the named route for the transactionsFiveScreen.
onTapTopup(BuildContext context) { NavigatorService.pushNamed(AppRoutes.transactionsFiveScreen, ); } 
/// Navigates to the transactionsSevenScreen when the action is triggered.
///
/// The [BuildContext] parameter is used to build the navigation stack.
/// When the action is triggered, this function uses the [NavigatorService]
/// to push the named route for the transactionsSevenScreen.
onTapFreezecard(BuildContext context) { NavigatorService.pushNamed(AppRoutes.transactionsSevenScreen, ); } 
/// Navigates to the transactionsFourScreen when the action is triggered.
///
/// The [BuildContext] parameter is used to build the navigation stack.
/// When the action is triggered, this function uses the [NavigatorService]
/// to push the named route for the transactionsFourScreen.
onTapDetails(BuildContext context) { NavigatorService.pushNamed(AppRoutes.transactionsFourScreen, ); } 
/// Navigates to the rewardsTwoScreen when the action is triggered.
///
/// The [BuildContext] parameter is used to build the navigation stack.
/// When the action is triggered, this function uses the [NavigatorService]
/// to push the named route for the rewardsTwoScreen.
onTapRowtesla(BuildContext context) { NavigatorService.pushNamed(AppRoutes.rewardsTwoScreen, ); } 
 }
