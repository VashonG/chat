import 'bloc/rewards_one_bloc.dart';import 'models/rewards_one_model.dart';import 'package:carat_card/core/app_export.dart';import 'package:carat_card/presentation/dashboard_one_page/dashboard_one_page.dart';import 'package:carat_card/presentation/offer_two_page/offer_two_page.dart';import 'package:carat_card/presentation/rewards_three_page/rewards_three_page.dart';import 'package:carat_card/presentation/transactions_one_page/transactions_one_page.dart';import 'package:carat_card/widgets/app_bar/appbar_circleimage.dart';import 'package:carat_card/widgets/app_bar/appbar_image.dart';import 'package:carat_card/widgets/app_bar/appbar_subtitle.dart';import 'package:carat_card/widgets/app_bar/custom_app_bar.dart';import 'package:carat_card/widgets/custom_bottom_bar.dart';import 'package:carat_card/widgets/custom_drop_down.dart';import 'package:carat_card/widgets/custom_text_form_field.dart';import 'package:flutter/material.dart';
// ignore_for_file: must_be_immutable
class RewardsOneScreen extends StatelessWidget {RewardsOneScreen({Key? key}) : super(key: key);

GlobalKey<NavigatorState> navigatorKey = GlobalKey();

static Widget builder(BuildContext context) { return BlocProvider<RewardsOneBloc>(create: (context) => RewardsOneBloc(RewardsOneState(rewardsOneModelObj: RewardsOneModel()))..add(RewardsOneInitialEvent()), child: RewardsOneScreen()); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, appBar: CustomAppBar(height: 43.v, leadingWidth: 58.h, leading: AppbarCircleimage(imagePath: ImageConstant.imgEllipse2, margin: EdgeInsets.only(left: 20.h), onTap: () {onTapCircleimage(context);}), title: AppbarSubtitle(text: "lbl_stock_rewards".tr, margin: EdgeInsets.only(left: 12.h)), actions: [AppbarImage(svgPath: ImageConstant.imgHeroiconsoutlinebell, margin: EdgeInsets.symmetric(horizontal: 20.h, vertical: 7.v), onTap: () {onTapHeroiconsoutlin(context);})]), body: SizedBox(width: double.maxFinite, child: Column(children: [Container(height: 15.v, width: double.maxFinite, decoration: BoxDecoration(color: appTheme.whiteA700)), Container(margin: EdgeInsets.only(left: 20.h, top: 69.v, right: 20.h), padding: EdgeInsets.symmetric(horizontal: 20.h, vertical: 8.v), decoration: AppDecoration.outlineGray.copyWith(borderRadius: BorderRadiusStyle.roundedBorder20), child: Column(mainAxisSize: MainAxisSize.min, mainAxisAlignment: MainAxisAlignment.end, children: [SizedBox(height: 10.v), Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Column(crossAxisAlignment: CrossAxisAlignment.start, children: [RichText(text: TextSpan(children: [TextSpan(text: "lbl2".tr, style: CustomTextStyles.headlineLargeSemiBold_1), TextSpan(text: "lbl_192".tr, style: CustomTextStyles.headlineLargeSemiBold_1), TextSpan(text: "lbl_80".tr, style: CustomTextStyles.headlineLargeBluegray200)]), textAlign: TextAlign.left), SizedBox(height: 8.v), Row(children: [Text("lbl_total_portfolio".tr, style: theme.textTheme.titleSmall), Padding(padding: EdgeInsets.only(left: 8.h), child: Text("lbl_2_15".tr, style: CustomTextStyles.bodyMediumGreen400))])]), BlocSelector<RewardsOneBloc, RewardsOneState, RewardsOneModel?>(selector: (state) => state.rewardsOneModelObj, builder: (context, rewardsOneModelObj) {return CustomDropDown(width: 78.h, icon: Container(margin: EdgeInsets.fromLTRB(7.h, 10.v, 16.h, 10.v), child: CustomImageView(svgPath: ImageConstant.imgArrowdownBlueGray200)), margin: EdgeInsets.only(top: 12.v, bottom: 10.v), hintText: "lbl_1m".tr, items: rewardsOneModelObj?.dropdownItemList ?? [], onChanged: (value) {context.read<RewardsOneBloc>().add(ChangeDropDownEvent(value: value));});})]), SizedBox(height: 33.v), BlocSelector<RewardsOneBloc, RewardsOneState, TextEditingController?>(selector: (state) => state.totalsharesoneController, builder: (context, totalsharesoneController) {return CustomTextFormField(controller: totalsharesoneController, hintText: "lbl_200".tr, hintStyle: CustomTextStyles.bodySmallPrimaryContainer, borderDecoration: TextFormFieldStyleHelper.underLineGray, filled: false);}), SizedBox(height: 12.v), CustomImageView(svgPath: ImageConstant.imgVector1, height: 86.v, width: 310.h), SizedBox(height: 2.v), SizedBox(height: 22.v, width: 310.h, child: Stack(alignment: Alignment.bottomLeft, children: [BlocSelector<RewardsOneBloc, RewardsOneState, TextEditingController?>(selector: (state) => state.currentsharesController, builder: (context, currentsharesController) {return CustomTextFormField(width: 310.h, controller: currentsharesController, hintText: "lbl_100".tr, hintStyle: CustomTextStyles.bodySmallPrimaryContainer, textInputAction: TextInputAction.done, alignment: Alignment.topCenter, borderDecoration: TextFormFieldStyleHelper.underLineGray, filled: false);}), Align(alignment: Alignment.bottomLeft, child: SizedBox(child: Divider(color: appTheme.gray300))), Align(alignment: Alignment.bottomRight, child: SizedBox(child: Divider(color: appTheme.gray300)))])), SizedBox(height: 11.v), Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Text("lbl_july_1_2023".tr, style: CustomTextStyles.bodySmallPrimaryContainer), Text("lbl_july_31_2023".tr, style: CustomTextStyles.bodySmallPrimaryContainer)])])), GestureDetector(onTap: () {onTapGraph1line(context);}, child: Container(margin: EdgeInsets.fromLTRB(20.h, 20.v, 20.h, 5.v), padding: EdgeInsets.all(20.h), decoration: AppDecoration.outlineGray.copyWith(borderRadius: BorderRadiusStyle.roundedBorder20), child: Column(mainAxisSize: MainAxisSize.min, children: [Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: EdgeInsets.symmetric(vertical: 3.v), child: Text("lbl_stocks".tr, style: theme.textTheme.titleSmall)), CustomImageView(svgPath: ImageConstant.imgHeroiconsoutli, height: 24.adaptSize, width: 24.adaptSize)]), SizedBox(height: 24.v), Container(decoration: AppDecoration.white, child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [SizedBox(height: 48.adaptSize, width: 48.adaptSize, child: CircularProgressIndicator(value: 0.5, backgroundColor: appTheme.orange5002, color: theme.colorScheme.primary)), Padding(padding: EdgeInsets.only(left: 16.h, top: 4.v, bottom: 3.v), child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Align(alignment: Alignment.center, child: Text("lbl_tesla".tr, style: theme.textTheme.titleSmall)), SizedBox(height: 6.v), Text("lbl_tsla".tr, style: theme.textTheme.bodyMedium)])), Spacer(), Padding(padding: EdgeInsets.only(top: 4.v, bottom: 3.v), child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Align(alignment: Alignment.center, child: Text("lbl_39_67".tr, style: theme.textTheme.titleSmall)), SizedBox(height: 6.v), Align(alignment: Alignment.centerRight, child: Text("lbl_2_15".tr, style: CustomTextStyles.bodyMediumGreen400))]))])), SizedBox(height: 20.v), Container(decoration: AppDecoration.white.copyWith(borderRadius: BorderRadiusStyle.customBorderBL24), child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [SizedBox(height: 48.adaptSize, width: 48.adaptSize, child: CircularProgressIndicator(value: 0.5, backgroundColor: appTheme.orange5002, color: theme.colorScheme.primary)), Padding(padding: EdgeInsets.only(left: 16.h, top: 4.v, bottom: 3.v), child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Text("lbl_atlassian".tr, style: theme.textTheme.titleSmall), SizedBox(height: 7.v), Text("lbl_atls".tr, style: theme.textTheme.bodyMedium)])), Spacer(), Padding(padding: EdgeInsets.only(top: 4.v, bottom: 3.v), child: Column(crossAxisAlignment: CrossAxisAlignment.end, children: [Text("lbl_92_90".tr, style: theme.textTheme.titleSmall), SizedBox(height: 6.v), Text("lbl_32".tr, style: CustomTextStyles.bodyMediumRedA200)]))])), SizedBox(height: 20.v), Container(decoration: AppDecoration.white, child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [SizedBox(height: 48.adaptSize, width: 48.adaptSize, child: Stack(alignment: Alignment.center, children: [Align(alignment: Alignment.center, child: SizedBox(height: 48.adaptSize, width: 48.adaptSize, child: CircularProgressIndicator(value: 0.5, backgroundColor: appTheme.orange5002, color: theme.colorScheme.primary))), Align(alignment: Alignment.center, child: Container(height: 32.adaptSize, width: 32.adaptSize, decoration: BoxDecoration(borderRadius: BorderRadius.circular(16.h), image: DecorationImage(image: AssetImage(ImageConstant.imgEllipse336x36), fit: BoxFit.cover))))])), Padding(padding: EdgeInsets.only(left: 16.h, top: 4.v, bottom: 3.v), child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Text("lbl_amazon".tr, style: theme.textTheme.titleSmall), SizedBox(height: 6.v), Text("lbl_amzn".tr, style: theme.textTheme.bodyMedium)])), Spacer(), Padding(padding: EdgeInsets.only(top: 4.v, bottom: 3.v), child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Align(alignment: Alignment.center, child: Text("lbl_67_23".tr, style: theme.textTheme.titleSmall)), SizedBox(height: 6.v), Align(alignment: Alignment.centerRight, child: Text("lbl_17_9".tr, style: CustomTextStyles.bodyMediumGreen400))]))]))])))])), bottomNavigationBar: CustomBottomBar(onChanged: (BottomBarEnum type) {Navigator.pushNamed(navigatorKey.currentContext!, getCurrentRoute(type));}))); } 
///Handling route based on bottom click actions
String getCurrentRoute(BottomBarEnum type) { switch (type) {case BottomBarEnum.Home: return AppRoutes.dashboardOnePage; case BottomBarEnum.Account: return AppRoutes.transactionsOnePage; case BottomBarEnum.Rewards: return AppRoutes.rewardsThreePage; case BottomBarEnum.Offers: return AppRoutes.offerTwoPage; default: return "/";} } 
///Handling page based on route
Widget getCurrentPage(BuildContext context, String currentRoute, ) { switch (currentRoute) {case AppRoutes.dashboardOnePage: return DashboardOnePage.builder(context); case AppRoutes.transactionsOnePage: return TransactionsOnePage.builder(context); case AppRoutes.rewardsThreePage: return RewardsThreePage.builder(context); case AppRoutes.offerTwoPage: return OfferTwoPage.builder(context); default: return DefaultWidget();} } 
/// Navigates to the porfileOneScreen when the action is triggered.
///
/// The [BuildContext] parameter is used to build the navigation stack.
/// When the action is triggered, this function uses the [NavigatorService]
/// to push the named route for the porfileOneScreen.
onTapCircleimage(BuildContext context) { NavigatorService.pushNamed(AppRoutes.porfileOneScreen, ); } 
/// Navigates to the notificationsTwoScreen when the action is triggered.
///
/// The [BuildContext] parameter is used to build the navigation stack.
/// When the action is triggered, this function uses the [NavigatorService]
/// to push the named route for the notificationsTwoScreen.
onTapHeroiconsoutlin(BuildContext context) { NavigatorService.pushNamed(AppRoutes.notificationsTwoScreen, ); } 
/// Navigates to the rewardsTwoScreen when the action is triggered.
///
/// The [BuildContext] parameter is used to build the navigation stack.
/// When the action is triggered, this function uses the [NavigatorService]
/// to push the named route for the rewardsTwoScreen.
onTapGraph1line(BuildContext context) { NavigatorService.pushNamed(AppRoutes.rewardsTwoScreen, ); } 
 }
