import '../transactions_one_page/widgets/chipviewtop_up_item_widget.dart';import '../transactions_one_page/widgets/usersubscriptio1_item_widget.dart';import 'bloc/transactions_one_bloc.dart';import 'models/chipviewtop_up_item_model.dart';import 'models/transactions_one_model.dart';import 'models/usersubscriptio1_item_model.dart';import 'package:carat_card/core/app_export.dart';import 'package:carat_card/widgets/app_bar/appbar_circleimage.dart';import 'package:carat_card/widgets/app_bar/appbar_image.dart';import 'package:carat_card/widgets/app_bar/appbar_subtitle.dart';import 'package:carat_card/widgets/app_bar/custom_app_bar.dart';import 'package:flutter/material.dart';class TransactionsOnePage extends StatelessWidget {const TransactionsOnePage({Key? key}) : super(key: key);

static Widget builder(BuildContext context) { return BlocProvider<TransactionsOneBloc>(create: (context) => TransactionsOneBloc(TransactionsOneState(transactionsOneModelObj: TransactionsOneModel()))..add(TransactionsOneInitialEvent()), child: TransactionsOnePage()); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(appBar: CustomAppBar(height: 38.v, leadingWidth: 58.h, leading: AppbarCircleimage(imagePath: ImageConstant.imgEllipse2, margin: EdgeInsets.only(left: 20.h), onTap: () {onTapCircleimage(context);}), title: AppbarSubtitle(text: "lbl_account".tr, margin: EdgeInsets.only(left: 12.h)), actions: [AppbarImage(svgPath: ImageConstant.imgHeroiconsoutlinebell, margin: EdgeInsets.symmetric(horizontal: 20.h, vertical: 7.v), onTap: () {onTapHeroiconsoutlin(context);})]), body: SizedBox(width: double.maxFinite, child: Column(children: [Container(height: 15.v, width: double.maxFinite, decoration: BoxDecoration(color: appTheme.whiteA700)), Container(width: 350.h, margin: EdgeInsets.only(left: 20.h, top: 69.v, right: 20.h), padding: EdgeInsets.all(20.h), decoration: AppDecoration.outlineGray.copyWith(borderRadius: BorderRadiusStyle.roundedBorder20), child: Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.start, children: [RichText(text: TextSpan(children: [TextSpan(text: "lbl_1_933".tr, style: CustomTextStyles.headlineLargeSemiBold_1), TextSpan(text: "lbl_40".tr, style: CustomTextStyles.headlineLargeBluegray200)]), textAlign: TextAlign.left), SizedBox(height: 7.v), Text("lbl_total_balance".tr, style: theme.textTheme.titleSmall), SizedBox(height: 25.v), BlocSelector<TransactionsOneBloc, TransactionsOneState, TransactionsOneModel?>(selector: (state) => state.transactionsOneModelObj, builder: (context, transactionsOneModelObj) {return Wrap(runSpacing: 5.v, spacing: 5.h, children: List<Widget>.generate(transactionsOneModelObj?.chipviewtopUpItemList.length ?? 0, (index) {ChipviewtopUpItemModel model = transactionsOneModelObj?.chipviewtopUpItemList[index] ?? ChipviewtopUpItemModel(); return ChipviewtopUpItemWidget(model, onSelectedChipView: (value) {context.read<TransactionsOneBloc>().add(UpdateChipViewEvent(index: index, isSelected: value));});}));})])), Expanded(child: SizedBox(width: double.maxFinite, child: Container(margin: EdgeInsets.only(left: 20.h, top: 20.v, right: 20.h), padding: EdgeInsets.symmetric(horizontal: 20.h, vertical: 19.v), decoration: AppDecoration.outlineGray.copyWith(borderRadius: BorderRadiusStyle.roundedBorder20), child: Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.start, children: [SizedBox(height: 2.v), Text("lbl_transactions".tr, style: theme.textTheme.titleSmall), SizedBox(height: 25.v), Expanded(child: BlocSelector<TransactionsOneBloc, TransactionsOneState, TransactionsOneModel?>(selector: (state) => state.transactionsOneModelObj, builder: (context, transactionsOneModelObj) {return ListView.separated(physics: BouncingScrollPhysics(), shrinkWrap: true, separatorBuilder: (context, index) {return SizedBox(height: 19.v);}, itemCount: transactionsOneModelObj?.usersubscriptio1ItemList.length ?? 0, itemBuilder: (context, index) {Usersubscriptio1ItemModel model = transactionsOneModelObj?.usersubscriptio1ItemList[index] ?? Usersubscriptio1ItemModel(); return Usersubscriptio1ItemWidget(model);});}))]))))])))); } 
/// Navigates to the porfileOneScreen when the action is triggered.
///
/// The [BuildContext] parameter is used to build the navigation stack.
/// When the action is triggered, this function uses the [NavigatorService]
/// to push the named route for the porfileOneScreen.
onTapCircleimage(BuildContext context) { NavigatorService.pushNamed(AppRoutes.porfileOneScreen, ); } 
/// Navigates to the notificationsTwoScreen when the action is triggered.
///
/// The [BuildContext] parameter is used to build the navigation stack.
/// When the action is triggered, this function uses the [NavigatorService]
/// to push the named route for the notificationsTwoScreen.
onTapHeroiconsoutlin(BuildContext context) { NavigatorService.pushNamed(AppRoutes.notificationsTwoScreen, ); } 
 }
